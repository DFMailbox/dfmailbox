services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DFQ_POSTGRES_DB:-dfqueue}
      POSTGRES_USER: ${DFQ_POSTGRES_USER:-dfuser}
      POSTGRES_PASSWORD: ${DFQ_POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  webserver:
    init: true
    build:
      context: .
      # In .env make TARGET=dev for faster builds at the cost of size
      target: ${TARGET:-prod}
    ports:
      - ${DFQ_PORT:-3000}:${DFQ_PORT:-8080}
    depends_on:
      - migrator
      - redis
    environment:
      PORT: ${DFQ_PORT:-8080}
      DATABASE_URL: postgres://${DFQ_POSTGRES_USER:-dfuser}:${DFQ_POSTGRES_PASSWORD}@postgres:5432/${DFQ_POSTGRES_DB:-dfqueue}
      REDIS_URL: redis://redis:6379/0
      URL_PATH: ${DFQ_PATH}
      JWT_KEY: ${DFQ_JWT_KEY}
      SECRET_KEY: ${DFQ_SECRET_KEY}
    develop:
      watch:
        - action: rebuild
          path: ./src
    restart: unless-stopped

  migrator:
    image: migrate/migrate
    volumes:
      - migrations:/migrations
    command:
      - "-path=/migrations/"
      - "-database=postgres://${DFQ_POSTGRES_USER:-dfuser}:${DFQ_POSTGRES_PASSWORD}@postgres:5432/${DFQ_POSTGRES_DB:-dfqueue}"
      - "up"
    depends_on:
      - postgres
    restart: "no"
  certstrap:
    

volumes:
  postgres_data:
  redis_data:
  migrations:

